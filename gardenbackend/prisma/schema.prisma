// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:password123@localhost:3306/flowrista?schema=public"
}

model user {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  password  String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now()) @updatedAt
  phone     String?

  address address[]
  order   order[]
  cart    cart[]
}

model address {
  id        Int      @id @default(autoincrement())
  street    String
  city      String
  state     String
  country   String
  zip       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      user     @relation(fields: [userId], references: [id])
  userId    Int
}

model order {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  user      user        @relation(fields: [userId], references: [id])
  userId    Int
  orderItem orderItem[]
}

model orderItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
}

model product {
  id         Int         @id @default(autoincrement())
  name       String
  price      Float
  image      String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  orderItem  orderItem[]
  cartItem   cartItem[]
  category   category?   @relation(fields: [categoryId], references: [id])
  categoryId Int?
}

model cart {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      user       @relation(fields: [userId], references: [id])
  userId    Int
  cartItem  cartItem[]
}

model cartItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart      cart     @relation(fields: [cartId], references: [id])
  cartId    Int
  product   product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
}

model category {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  product   product[]
}
